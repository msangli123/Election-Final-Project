mutate(log_poverty_rating = log10(POVALL_2019))
poverty = subset(poverty,!(fips %% 1000 == 0))
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
map_data("county") %>%
as_tibble() %>%
left_join(
poverty %>%
rename(
region = state,
subregion = county,
`Poverty Rating` = poverty_rating
) %>%
mutate(region = str_to_lower(region),
subregion = str_to_lower(subregion)),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `Poverty Rating`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "green", high = "red") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
poverty %>%
rename(
region = state,
subregion = county,
`Poverty Rating` = log_poverty_rating
) %>%
mutate(region = str_to_lower(region),
subregion = str_to_lower(subregion)),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `Poverty Rating`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "green", high = "red") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
education %>%
rename(region = state,
subregion = county) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion),
pct_greater_than_HSdiploma = log10(pct_college_associates + pct_bachelors_or_higher)
) %>%
rename(`% of Population with an Associates Degree or More` = pct_greater_than_HSdiploma),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `% of Population with an Associates Degree or More`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "red", high = "green") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
education %>%
rename(region = state,
subregion = county) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion),
pct_greater_than_HSdiploma = pct_college_associates + pct_bachelors_or_higher
) %>%
rename(`% of Population with an Associates Degree or More` = pct_greater_than_HSdiploma),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `% of Population with an Associates Degree or More`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "red", high = "green") +
theme_void()
View(COVID)
map_data("county") %>%
as_tibble() %>%
left_join(
COVID %>%
rename(region = state,
subregion = county) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion),
pct_COVID_deaths_by_total = covid_deaths/total_deaths
) %>%
rename(`% of Total Deaths that are COVID Deaths` = pct_COVID_deaths_by_total),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `% of Total Deaths that are COVID Deaths`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "red", high = "green") +
theme_void()
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
map_data("county") %>%
as_tibble() %>%
left_join(
COVID %>%
rename(region = state,
subregion = county,
`% of Total Deaths that are COVID Deaths` = pct_COVID_deaths) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion)),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `% of Total Deaths that are COVID Deaths`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "green", high = "red") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
COVID %>%
rename(region = state,
subregion = county,
`% of Total Deaths that are COVID Deaths` = pct_covid_deaths) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion)),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `% of Total Deaths that are COVID Deaths`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "green", high = "red") +
theme_void()
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
View(election)
View(election)
View(unemployment)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
map_data("county") %>%
as_tibble() %>%
left_join(
unemployment %>%
rename(region = state,
subregion = county,
`Unemployment Rate` = unemployment_rate) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion)),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `Unemployment Rate`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "green", high = "red") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
education %>%
rename(region = state,
subregion = county) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion),
log_unemployment_rate = log10(unemployment_rate)
) %>%
rename(`Log Unemployment Rate` = log_unemployment_rate),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `Log Unemployment Rate`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "red", high = "green") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
unemployment %>%
rename(region = state,
subregion = county) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion),
log_unemployment_rate = log10(unemployment_rate)
) %>%
rename(`Log Unemployment Rate` = log_unemployment_rate),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `Log Unemployment Rate`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "red", high = "green") +
theme_void()
skewness(master_data)
skewness(county_health$traffic_volume)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
skewness(master$population)
skewness(master_data$population)
skewness(master_data$covid_deaths)
skewness(master_data$total_deaths)
View(poverty_raw)
View(poverty_raw)
skewness((poverty_raw %>% pivot_wider(names_from = Attribute,
values_from = Value))$POVALL_2019)
nums <- unlist(lapply(master_data, is.numeric))
nums
master_data %>% dplyr::select(where(is.numeric))
skewness(master_data %>% dplyr::select(where(is.numeric)))
skew_check = skewness(master_data %>% dplyr::select(where(is.numeric)))
View(skew_check)
map_data("county") %>%
as_tibble() %>%
left_join(
COVID %>%
rename(
region = state,
subregion = county,
`% of Total Deaths that are COVID Deaths` = pct_covid_deaths
) %>%
mutate(region = str_to_lower(region),
subregion = str_to_lower(subregion)),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `% of Total Deaths that are COVID Deaths`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "green", high = "red") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
unemployment %>%
rename(region = state,
subregion = county) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion),
log_unemployment_rate = log10(unemployment_rate)
) %>%
rename(`Log Unemployment Rate` = log_unemployment_rate),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `Log Unemployment Rate`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "red", high = "green") +
theme_void()
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
# read in the cleaned data
master_data = read_csv("/Users/sahill/OneDrive - PennO365/STAT 471/election-final-project/data/clean/master_data.csv")
library(tidyverse)
# read in the cleaned data
master_data = read_csv("/Users/sahill/OneDrive - PennO365/STAT 471/election-final-project/data/clean/master_data.csv")
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/3-train-test-split.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/3-train-test-split.R', echo=TRUE)
View(master_data)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
library(kableExtra)                     # for printing tables
library(cowplot)                        # for side by side plots
library(lubridate)                      # for dealing with dates
library(maps)                           # for creating maps
library(tidyverse)
library(tidyquant)
library(scales)
# read in the cleaned data
master_data = read_csv(
"/Users/sahill/OneDrive - PennO365/STAT 471/election-final-project/data/clean/master_data.csv"
)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
rm(list=ls())
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/0-download.R', echo=TRUE)
rm(list=ls())
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
library(janitor)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
rm(list=ls())
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/4-regression-modeling.R', echo=TRUE)
# read in the training data
train_data = read_csv("/Users/sahill/OneDrive - PennO365/STAT 471/election-final-project/data/clean/train_data.csv")
View(train_data)
ridge_fit = cv.glmnet(leading_party ~ . - state - county - fips - total_votes - Democrat - Other - Republican - Green - Libertarian - pct_dem - pct_rep - pct_other - pct_green - pct_libertarian,
alpha = 0,
nfolds = 10,
family = "binomial",
type.measure = "class",
data = train_data)
plot(ridge_fit)
plot_glmnet(ridge_fit, default_train, features_to_plot = 4)
# load libraries
library(glmnetUtils)                    # to run ridge and lasso
source("code/functions/plot_glmnet.R")            # for lasso/ridge trace plots
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/4-regression-modeling.R', echo=TRUE)
plot_glmnet(ridge_fit, default_train, features_to_plot = 4)
source("/Users/sahill/OneDrive - PennO365/STAT 471/election-final-project/code/functions/plot_glmnet.R")            # for lasso/ridge trace plots
plot_glmnet(ridge_fit, default_train, features_to_plot = 4)
plot_glmnet(ridge_fit, train_data, features_to_plot = 4)
plot_glmnet(ridge_fit, train_data, features_to_plot = 6)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/4-regression-modeling.R', echo=TRUE)
